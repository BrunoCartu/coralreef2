wd <- "~/Documents/My Research/Modeling/coralreef2"
wd_Datasets_original <- paste(wd,"/datasets_original",sep="") # orginal dataset used with R to produce csv used by the model
wd_Datasets_R <- paste(wd,"/datasets_R",sep="")               # datasets and results obtained from work on original datasets in R, but not used for the Repast model
wd_Datasets_outputs <- paste(wd,"/datasets_outputs",sep="")
wd_Datasets_inputs <- paste(wd,"/datasets_inputs",sep="")
wd_Figures <- paste(wd,"/figures",sep="")
wd_R_scripts <- paste(wd,"/R_scripts",sep="")
DF <- data.frame(
species = "bruno"
)
write.csv(DF,paste(wd_Datasets_inputs,"DF_test.csv",sep="/"),row.names = F)
wd_outputs_simulation <- paste(wd,"outputs_simulation",sep="/")
speciesPresent <- read.csv(paste(wd_outputs_simulation,"Species_present_in_simulation.csv",sep="/"),header=T,stringsAsFactors = F)
wd <- "~/Documents/My_Research/Modeling/coralreef2"
wd_Datasets_original <- paste(wd,"/datasets_original",sep="") # orginal dataset used with R to produce csv used by the model
wd_Datasets_R <- paste(wd,"/datasets_R",sep="")               # datasets and results obtained from work on original datasets in R, but not used for the Repast model
wd_Datasets_outputs <- paste(wd,"/datasets_outputs",sep="")
wd_Datasets_inputs <- paste(wd,"/datasets_inputs",sep="")
wd_Figures <- paste(wd,"/figures",sep="")
wd_R_scripts <- paste(wd,"/R_scripts",sep="")
wd_outputs_simulation <- paste(wd,"outputs_simulation",sep="/")
speciesPresent <- read.csv(paste(wd_outputs_simulation,"Species_present_in_simulation.csv",sep="/"),header=T,stringsAsFactors = F)
paste(wd_outputs_simulation,"Species_present_in_simulation.csv",sep="/")
wd_outputs_simulation
wd <- "/Users/carturan/Dropbox/PhD Bruno/Functional Traits/Traits analysis/Traits"
wd_Datasets_original <- paste(wd,"/Datasets_original",sep="")
wd_Datasets <- paste(wd,"/Datasets",sep="")
wd_Rscripts <- paste(wd,"Rscripts",sep="/")
Probability_original <- read.csv(paste(wd_Datasets_original,"Precoda_et_al_2017_model_output.csv",sep="/"),header=T,stringsAsFactors = F)
speciesPresent <- read.csv(paste(wd_outputs_simulation,"Species_present_in_simulation.csv",sep="/"),header=T,stringsAsFactors = F)
setwd("~/Documents/My_Research/Modeling/coralreef2/outputs_simulations")
getdr()
getd()
getwd()
speciesPresent <- read.csv(paste(wd_outputs_simulation,"Species_present_in_simulation.csv",sep="/"),header=T,stringsAsFactors = F)
/Users/carturan/Documents/My_Research/Modeling/coralreef2/outputs_simulation/Species_present_in_simulation.csv
speciesPresent <- read.csv(paste(wd_outputs_simulation,"Species_present_in_simulation.csv",sep="/"),header=T,stringsAsFactors = F)
speciesPresent <- read.csv(paste(wd_outputs_simulation,"Species_present_in_simulation.csv",sep="/"),header=T,stringsAsFactors = F)
wd_outputs_simulation <- paste(wd,"outputs_simulations",sep="/")
speciesPresent <- read.csv(paste(wd_outputs_simulation,"Species_present_in_simulation.csv",sep="/"),header=T,stringsAsFactors = F)
wd_outputs_simulation
wd <- "~/Documents/My_Research/Modeling/coralreef2"
wd_Datasets_original <- paste(wd,"/datasets_original",sep="") # orginal dataset used with R to produce csv used by the model
wd_Datasets_R <- paste(wd,"/datasets_R",sep="")               # datasets and results obtained from work on original datasets in R, but not used for the Repast model
wd_Datasets_outputs <- paste(wd,"/datasets_outputs",sep="")
wd_Datasets_inputs <- paste(wd,"/datasets_inputs",sep="")
wd_Figures <- paste(wd,"/figures",sep="")
wd_R_scripts <- paste(wd,"/R_scripts",sep="")
wd_outputs_simulation <- paste(wd,"outputs_simulations",sep="/")
speciesPresent <- read.csv(paste(wd_outputs_simulation,"Species_present_in_simulation.csv",sep="/"),header=T,stringsAsFactors = F)
speciesPresent
speciesPresent <- speciesPresent$species_names
speciesPresent
speciesPresent <- speciesPresent[,2]
speciesPresent
speciesPresent
speciesPresent <- read.csv(paste(wd_outputs_simulation,"Species_present_in_simulation.csv",sep="/"),header=T,stringsAsFactors = F,row.names = F)
speciesPresent <- read.csv(paste(wd_outputs_simulation,"Species_present_in_simulation.csv",sep="/"),header=T,stringsAsFactors = F)
speciesPresent <- read.csv(paste(wd_Datasets_inputs,"coral_pair_competition_probability.csv",sep="/"),header=T,stringsAsFactors = F)
length(speciesPresent$species1)
speciesPairInteraction_original <- read.csv(paste(wd_Datasets_inputs,"coral_pair_competition_probability.csv",sep="/"),header=T,stringsAsFactors = F)
speciesPresent <- read.csv(paste(wd_outputs_simulation,"Species_present_in_simulation.csv",sep="/"),header=T,stringsAsFactors = F)
length(speciesPairInteraction_original$species1) # 274911
length(levels(as.factor(speciesPairInteraction_original$species1)))
speciesPairInteraction <- speciesPairInteraction_original
speciesPairInteraction <- speciesPairInteraction_original
speciesPairInteraction <- speciesPairInteraction_original[speciesPairInteraction_original$species1 %in% speciesPresent$species_names]
speciesPresent
speciesPresent$species_names <- gsub("_"," ",speciesPresent$species_names)
speciesPresent
speciesPairInteraction <- speciesPairInteraction_original[speciesPairInteraction_original$species1 %in% speciesPresent$species_names]
speciesPresent
speciesPairInteraction <- speciesPairInteraction_original[speciesPairInteraction_original$species1 %in% speciesPresent$species_names,]
length(levels(as.factor(speciesPairInteraction$species1))) # 741
levels(as.factor(speciesPairInteraction$species1))
speciesInCommon <- levels(as.factor(speciesPairInteraction$species1))
speciesInCommon
length(speciesPairInteraction$species1)
length(speciesPairInteraction$species1)
speciesPairInteraction <- speciesPairInteraction_original[speciesPairInteraction_original$species2 %in% speciesPresent$species_names,]
length(speciesPairInteraction$species1) # 2220
length(levels(as.factor(speciesPairInteraction$species1)))
speciesPairInteraction <- speciesPairInteraction_original[speciesPairInteraction_original$species1 %in% speciesPresent$species_names,]
length(speciesPairInteraction$species1) # 2220
speciesPairInteraction <- speciesPairInteraction[speciesPairInteraction$species2 %in% speciesPresent$species_names,]
length(speciesPairInteraction$species1) # 5200
length(levels(as.factor(speciesPairInteraction$species1)))
speciesPairInteraction
speciesPairInteraction[speciesPairInteraction$species1 == speciesPairInteraction$species2,]
speciesPairInteraction[speciesPairInteraction$species1 != speciesPairInteraction$species2,]
speciesPairInteraction <- speciesPairInteraction[speciesPairInteraction$species1 != speciesPairInteraction$species2,]
speciesPairInteraction_final <- speciesPairInteraction
species <- levels(as.factor(speciesPairInteraction$species1))
species
length(levels(as.factor(speciesPairInteraction$species1))) # 55
wd <- "~/Documents/My_Research/Modeling/coralreef2"
wd_Datasets_original <- paste(wd,"/datasets_original",sep="") # orginal dataset used with R to produce csv used by the model
wd_Datasets_R <- paste(wd,"/datasets_R",sep="")               # datasets and results obtained from work on original datasets in R, but not used for the Repast model
wd_Datasets_outputs <- paste(wd,"/datasets_outputs",sep="")
wd_Datasets_inputs <- paste(wd,"/datasets_inputs",sep="")
wd_Figures <- paste(wd,"/figures",sep="")
wd_R_scripts <- paste(wd,"/R_scripts",sep="")
wd_outputs_simulation <- paste(wd,"outputs_simulations",sep="/")
speciesPresent <- read.csv(paste(wd_outputs_simulation,"Species_present_in_simulation.csv",sep="/"),header=T,stringsAsFactors = F)
speciesPresent$species_names <- gsub("_"," ",speciesPresent$species_names) # replace "_" by " "
speciesPairInteraction_original <- read.csv(paste(wd_Datasets_inputs,"coral_pair_competition_probability.csv",sep="/"),header=T,stringsAsFactors = F)
length(speciesPairInteraction_original$species1) # 274911
length(levels(as.factor(speciesPairInteraction_original$species1))) # 741
speciesPairInteraction <- speciesPairInteraction_original[speciesPairInteraction_original$species1 %in% speciesPresent$species_names,]
length(speciesPairInteraction$species1) # 2220
speciesPairInteraction <- speciesPairInteraction[speciesPairInteraction$species2 %in% speciesPresent$species_names,]
length(speciesPairInteraction$species1) # 55
length(levels(as.factor(speciesPairInteraction$species1))) # 55
speciesPairInteraction[speciesPairInteraction$species1 == speciesPairInteraction$species2,]
speciesPairInteraction <- speciesPairInteraction[speciesPairInteraction$species1 != speciesPairInteraction$species2,]
length(levels(as.facor(speciesPairInteraction)))
length(levels(as.facor(speciesPairInteraction$species1)))
length(levels(as.facTor(speciesPairInteraction$species1)))
length(levels(as.factor(speciesPairInteraction$species1)))
levels(as.factor(speciesPairInteraction$species1))
length(levels(as.factor(speciesPairInteraction$species2)))
levels(as.factor(speciesPairInteraction$species2))
species <- levels(as.factor(speciesPairInteraction$species1))
length(species) # 10
speciesPairInteraction <- speciesPairInteraction_original[speciesPairInteraction_original$species1 %in% speciesPresent$species_names,]
length(speciesPairInteraction$species1) # 2220
speciesPairInteraction <- speciesPairInteraction[speciesPairInteraction$species2 %in% speciesPresent$species_names,]
length(speciesPairInteraction$species1) # 55
species <- levels(as.factor(speciesPairInteraction$species1))
length(species) # 10
speciesPairInteraction[speciesPairInteraction$species1 == speciesPairInteraction$species2,]
speciesPairInteraction <- speciesPairInteraction[speciesPairInteraction$species1 != speciesPairInteraction$species2,]
length(levels(as.factor(speciesPairInteraction$species2)))
speciesPairInteraction_final <- speciesPairInteraction
speciesPairInteraction <- speciesPairInteraction_original[speciesPairInteraction_original$species1 %in% speciesPresent$species_names,]
length(speciesPairInteraction$species1) # 2220
speciesPairInteraction <- speciesPairInteraction[speciesPairInteraction$species2 %in% speciesPresent$species_names,]
length(speciesPairInteraction$species1) # 55
species <- levels(as.factor(speciesPairInteraction$species1))
length(species) # 10
speciesPairInteraction_final <- speciesPairInteraction
for(i in 1:length(speciesPairInteraction$species1)){
}
speciesPairInteraction_final <- speciesPairInteraction
speciesPairInteraction
speciesPairInteraction_final <- speciesPairInteraction[speciesPairInteraction$species1 == species[1],]
speciesPairInteraction_final
i <- 1
temp <- subest(speciesPairInteraction,speciesPairInteraction$species1 == species[i])
temp <- subset(speciesPairInteraction,speciesPairInteraction$species1 == species[i])
temp
i <- 2
temp <- subset(speciesPairInteraction,speciesPairInteraction$species1 == species[i])
temp
specesNotInSpecies2Col <- species[species !%in% temp$species2]
specesNotInSpecies2Col <- species[!(species %in% temp$species2)]
specesNotInSpecies2Col
speciesNotInSpecies2Col <- species[!(species %in% temp$species2)]
for(k in 10:1){
print(k)
}
j <- 1
rowToAdd <- speciesPairInteraction[speciesPairInteraction$species1 == speciesNotInSpecies2Col[j]]
rowToAdd <- speciesPairInteraction[speciesPairInteraction$species1 == speciesNotInSpecies2Col[j],]
rowToAdd
rowToAdd <- speciesPairInteraction[speciesPairInteraction$species1 == speciesNotInSpecies2Col[j] && speciesPairInteraction$species2 == species[i],]
rowToAdd
speciesPairInteraction
speciesNotInSpecies2Col[j]
species[i]
rowToAdd <- speciesPairInteraction[speciesPairInteraction$species1 == speciesNotInSpecies2Col[j],]
rowToAdd <- rowToAdd[rowToAdd$species1 == species[i],]
rowToAdd
rowToAdd <- speciesPairInteraction[speciesPairInteraction$species1 == speciesNotInSpecies2Col[j],]
rowToAdd
species[i]
rowToAdd <- rowToAdd[rowToAdd$species2 == species[i],]
rowToAdd <- speciesPairInteraction[speciesPairInteraction$species1 == speciesNotInSpecies2Col[j],]
rowToAdd <- rowToAdd[rowToAdd$species2 == species[i],]
rowToAdd
i
temp <- subset(speciesPairInteraction,speciesPairInteraction$species1 == species[i])
speciesNotInSpecies2Col <- species[!(species %in% temp$species2)]
for(j in length(speciesNotInSpecies2Col):1){
rowToAdd <- speciesPairInteraction[speciesPairInteraction$species1 == speciesNotInSpecies2Col[j],]
rowToAdd <- rowToAdd[rowToAdd$species2 == species[i],]
temp <- rbind(rowToAdd,temp)
}
temp
rowToAdd
sp1 <- rowToAdd$species1
sp1
prob.sp1.lose <- rowToAdd$prob.species1.loses
sp1 <- rowToAdd$species1
prob.sp1.lose <- rowToAdd$prob.species1.loses
rowToAdd$species1 <- rowToAdd$species2
rowToAdd$species2 <- sp1
rowToAdd$prob.species1.wins <- rowToAdd$prob.species1.loses
rowToAdd <- speciesPairInteraction[speciesPairInteraction$species1 == speciesNotInSpecies2Col[j],]
rowToAdd <- rowToAdd[rowToAdd$species2 == species[i],]
rowToAdd
sp1 <- rowToAdd$species1
prob.sp1.lose <- rowToAdd$prob.species1.loses
rowToAdd$species1 <- rowToAdd$species2
rowToAdd$species2 <- sp1
rowToAdd$prob.species1.loses <- rowToAdd$prob.species1.wins
rowToAdd$prob.species1.wins <- prob.sp1.lose
rowToAdd
speciesPairInteraction_final <- speciesPairInteraction[speciesPairInteraction$species1 == species[1],]
for(i in 2:length(species)){
temp <- subset(speciesPairInteraction,speciesPairInteraction$species1 == species[i])
speciesNotInSpecies2Col <- species[!(species %in% temp$species2)]
for(j in length(speciesNotInSpecies2Col):1){
rowToAdd <- speciesPairInteraction[speciesPairInteraction$species1 == speciesNotInSpecies2Col[j],]
rowToAdd <- rowToAdd[rowToAdd$species2 == species[i],]
# revers sp1 and sp2
sp1 <- rowToAdd$species1
prob.sp1.lose <- rowToAdd$prob.species1.loses
rowToAdd$species1 <- rowToAdd$species2
rowToAdd$species2 <- sp1
rowToAdd$prob.species1.loses <- rowToAdd$prob.species1.wins
rowToAdd$prob.species1.wins <- prob.sp1.lose
# add rowToAdd at top temp
temp <- rbind(rowToAdd,temp)
}
speciesPairInteraction_final <- cbind(speciesPairInteraction_final,temp)
}
speciesPairInteraction_final
length(speciesPairInteraction_final$species1)
speciesPairInteraction_final <- speciesPairInteraction[speciesPairInteraction$species1 == species[1],]
for(i in 2:length(species)){
temp <- subset(speciesPairInteraction,speciesPairInteraction$species1 == species[i])
speciesNotInSpecies2Col <- species[!(species %in% temp$species2)]
for(j in length(speciesNotInSpecies2Col):1){
rowToAdd <- speciesPairInteraction[speciesPairInteraction$species1 == speciesNotInSpecies2Col[j],]
rowToAdd <- rowToAdd[rowToAdd$species2 == species[i],]
# revers sp1 and sp2
sp1 <- rowToAdd$species1
prob.sp1.lose <- rowToAdd$prob.species1.loses
rowToAdd$species1 <- rowToAdd$species2
rowToAdd$species2 <- sp1
rowToAdd$prob.species1.loses <- rowToAdd$prob.species1.wins
rowToAdd$prob.species1.wins <- prob.sp1.lose
# add rowToAdd at top temp
temp <- rbind(rowToAdd,temp)
}
speciesPairInteraction_final <- rbind(speciesPairInteraction_final,temp)
}
length(speciesPairInteraction_final$species1)
length(levels(as.factor(speciesPairInteraction_final$prob.species1.wins)))
length(levels(as.factor(speciesPairInteraction_final$species1)))
length(levels(as.factor(speciesPairInteraction_final$species2)))
levels(as.factor(speciesPairInteraction_final$species1))
levels(as.factor(speciesPairInteraction_final$species2))
speciesPairInteraction_final <- speciesPairInteraction_final[speciesPairInteraction_final$species1 != speciesPairInteraction_final$species2,]
length(speciesPairInteraction_final$species1)
levels(as.factor(speciesPairInteraction_final$species1))
levels(as.factor(speciesPairInteraction_final$species2))
speciesPairInteraction_final
wd <- "~/Documents/My_Research/Modeling/coralreef2"
wd_Datasets_original <- paste(wd,"/datasets_original",sep="") # orginal dataset used with R to produce csv used by the model
wd_Datasets_R <- paste(wd,"/datasets_R",sep="")               # datasets and results obtained from work on original datasets in R, but not used for the Repast model
wd_Datasets_outputs <- paste(wd,"/datasets_outputs",sep="")
wd_Datasets_inputs <- paste(wd,"/datasets_inputs",sep="")
wd_Figures <- paste(wd,"/figures",sep="")
wd_R_scripts <- paste(wd,"/R_scripts",sep="")
wd_outputs_simulation <- paste(wd,"outputs_simulations",sep="/")
speciesPresent <- read.csv(paste(wd_outputs_simulation,"Species_present_in_simulation.csv",sep="/"),header=T,stringsAsFactors = F)
speciesPresent$species_names <- gsub("_"," ",speciesPresent$species_names) # replace "_" by " "
speciesPairInteraction_original <- read.csv(paste(wd_Datasets_original,"coral_pair_competition_probability.csv",sep="/"),header=T,stringsAsFactors = F)
length(speciesPairInteraction_original$species1) # 274911
length(levels(as.factor(speciesPairInteraction_original$species1))) # 741
speciesPairInteraction <- speciesPairInteraction_original[speciesPairInteraction_original$species1 %in% speciesPresent$species_names,]
length(speciesPairInteraction$species1) # 2220
speciesPairInteraction <- speciesPairInteraction[speciesPairInteraction$species2 %in% speciesPresent$species_names,]
length(speciesPairInteraction$species1) # 55
species <- levels(as.factor(speciesPairInteraction$species1))
length(species) # 10
speciesPairInteraction_final <- speciesPairInteraction[speciesPairInteraction$species1 == species[1],]
for(i in 2:length(species)){
temp <- subset(speciesPairInteraction,speciesPairInteraction$species1 == species[i])
speciesNotInSpecies2Col <- species[!(species %in% temp$species2)]
for(j in length(speciesNotInSpecies2Col):1){
rowToAdd <- speciesPairInteraction[speciesPairInteraction$species1 == speciesNotInSpecies2Col[j],]
rowToAdd <- rowToAdd[rowToAdd$species2 == species[i],]
# revers sp1 and sp2
sp1 <- rowToAdd$species1
prob.sp1.lose <- rowToAdd$prob.species1.loses
rowToAdd$species1 <- rowToAdd$species2
rowToAdd$species2 <- sp1
rowToAdd$prob.species1.loses <- rowToAdd$prob.species1.wins
rowToAdd$prob.species1.wins <- prob.sp1.lose
# add rowToAdd at top temp
temp <- rbind(rowToAdd,temp)
}
speciesPairInteraction_final <- rbind(speciesPairInteraction_final,temp)
}
length(speciesPairInteraction_final$species1) # 100
length(levels(as.factor(speciesPairInteraction_final$species2)))
speciesPairInteraction_final <- speciesPairInteraction_final[speciesPairInteraction_final$species1 != speciesPairInteraction_final$species2,]
length(speciesPairInteraction_final$species1)
levels(as.factor(speciesPairInteraction_final$species2))
write.csv(speciesPairInteraction_final[,1:3],paste(wd_Datasets_inputs,"coral_pair_competition_probability_simulation.csv",sep="/"),row.names = F)
